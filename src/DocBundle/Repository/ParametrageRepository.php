<?php

namespace DocBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * CnpDocumentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParametrageRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $reseauId
     * @return array
     */
    public function getParametrageByReseau($reseauId, $page = 1, $maxPerPage=20)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->join('p.reseau', 'res')
            ->leftJoin('p.pdfSources', 'pdf')
            ->addSelect('res')
            ->addSelect('pdf')
            ->where('res.id = :id')
            ->andWhere('pdf.current = :current')
            ->setParameter('current', 1)
            ->setParameter('id', $reseauId)
            ->orderBy('p.ordre', 'ASC');
        $qb->setFirstResult(($page-1) * $maxPerPage)
            ->setMaxResults($maxPerPage);
        return new Paginator($qb, true);
    }

    /**
     * @param $reseauId
     * @return array
     */
    public function getParametrageByReseauNoPdf($reseauId, $page = 1, $maxPerPage=20)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->join('p.reseau', 'res')
            ->addSelect('res')
            ->where('res.id = :id')
            ->setParameter('id', $reseauId)
            ->orderBy('p.ordre', 'ASC');
        $qb->setFirstResult(($page-1) * $maxPerPage)
            ->setMaxResults($maxPerPage);
        return new Paginator($qb, true);
    }

    /**
     * @return array
     */
    public function getParametrages($page = 1, $maxPerPage=20)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->join('p.reseau', 'res')
            //->join('p.pdfSources', 'pdf')
            ->addSelect('res')
            //->addSelect('pdf')
            ->orderBy('p.ordre', 'ASC');
        $qb->setFirstResult(($page-1) * $maxPerPage)
            ->setMaxResults($maxPerPage);
        return new Paginator($qb, true);
    }

    /**
     * @return array
     */
    public function findOneWithPdf($id)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->join('p.pdfSource', 'pdf')
            ->addSelect('pdf')
            ->where('p.id = :id')
            ->setParameter('id', $id);
        return $qb
            ->getQuery()
            ->getResult();
    }

    /**
     * @return array
     */
    public function findLiassePdf($ref, $cont)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->join('p.pdfSources', 'pdf')
            ->addSelect('pdf')
            ->where('p.reference = :ref')
            ->andWhere('p.contrat = :cont')
            ->andWhere($qb->expr()->in('p.type', ':types'))
            ->orWhere('p.contrat = :cont_com')
            ->setParameters(array('ref' => $ref, 'cont' => $cont, 'cont_com' => 'COMMUN', 'types'=>array('DA', 'QS', 'CG')));
        return $qb
            ->getQuery()
            ->getResult();
    }
}
